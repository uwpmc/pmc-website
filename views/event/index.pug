doctype html
head
  include ../template/head.pug
  title Events - Pure Math Club
  meta(name='decription', content="The official website of the University of Waterloo's Pure Math, Applied Math, Combinatorics & Optimization Club, under the Mathematics Society.")

each val in posts
  style(type='text/css').
    a[id="#{val.id}"]:target ~ .switcheroo .table {
      transform: translateX(-50%);
    }
    a[id="#{val.id}"]:target ~ .switcheroo #event-#{val.id} {
      max-height: 999999px !important;
      opacity: 1 !important;
      transition: max-height 0.5s ease, opacity 0.5s ease;
    }
    a[id="#{val.id}"]:target ~ .switcheroo #list {
      max-height: 0 !important;
      opacity: 0 !important;
      transition: max-height 0.5s ease opacity 0.5s ease;
    }
-
  function readableDate(date) {
    // date given as yyyy-mm-dd
    let day = (date.charAt(6) == '0') ? date.charAt(7) : date.slice(6,8);
    let month = '';
    switch ('' + date.slice(4,6)) {
      case '01':
        month = 'January';
        break;
      case '02':
        month = 'February';
        break;
      case '03':
        month = 'March';
        break;
      case '04':
        month = 'April';
        break;
      case '05':
        month = 'May';
        break;
      case '06':
        month = 'June';
        break;
      case '07':
        month = 'July';
        break;
      case '08':
        month = 'August';
        break;
      case '09':
        month = 'September';
        break;
      case '10':
        month = 'October';
        break;
      case '11':
        month = 'November';
        break;
      case '12':
        month = 'December';
        break;
    }
    return month + ' ' + day + ', ' + date.slice(0,4);
  }
  function readableTime(time) {
    // time given as hh:mm:ss
    const parts = time.split(':');
    time = parts[0] + parts[1];
    let intTime = parseInt(time);
    let hr = Math.floor(time/100);
    let ampm = (hr >= 12 ? 'PM' : 'AM');
    if (hr == 0) hr = 12;
    else if (hr > 12) hr -= 12;
    
    return hr + ':' + time.slice(2,4) + ' ' + ampm;
  }
  function getTerm(date) {
    // date given as yyyymmdd
    let month = parseInt(date.slice(4,6));
    return (month < 5 ? 'w' : (month < 9 ? 's' : 'f')) + date.slice(2,4);
  }
  Date.prototype.yyyymmdd = function() {
    var mm = this.getMonth() + 1; // getMonth() is zero-based
    var dd = this.getDate();
    
    return [this.getFullYear(),
            (mm>9 ? '' : '0') + mm,
            (dd>9 ? '' : '0') + dd
            ].join('');
          };
  function prettyFmtTerm(term) {
    var s = '';
    if (term[0] == 'w') { s = 'Winter' }
    else if (term[0] == 's') { s = 'Spring' }
    else if (term[0] == 'f') { s = 'Fall' }
    return s + ' 20' + term[1] + term[2];
  }
  function nextTerm(term) {
    const year = parseInt(term[1]+term[2])+1;
    if (term[0] == 'w') { return 's' + term[1] + term[2]; }
    if (term[0] == 's') { return 'f' + term[1] + term[2]; }
    if (term[0] == 'f') { return 'w' + (year < 10 ? '0' : '') + year; }
  }
  function prevTerm(term) {
    const year = parseInt(term[1]+term[2])-1;
    if (term[0] == 'w') { return 'f' + (year < 10 ? '0' : '') + year; }
    if (term[0] == 's') { return 'w' + term[1] + term[2]; }
    if (term[0] == 'f') { return 's' + term[1] + term[2]; }
  }
  function eventBGColor(type) {
    for (let i = 0; i < types.length; ++i) {
      //console.log(types[i].id + ' ' + type)
      if (types[i].id === type) {
        //return 'linear-gradient(' + types[i].fstcol + 'ff, ' + types[i].sndcol + 'ce)';
        return [types[i].fstcol, types[i].sndcol];
      }
    }
    //return 'linear-gradient(#000000, #000000)';
    return ['#000000', '#000000'];
  }

mixin event(id, type, title, desc, date, begintime, endtime, loc, imgpath)
  a(href='#'+id, class='longEventItem '+(Date.now() - 86400000 > date ? 'dead' : 'alive'))
    h2 #{title}
    h3 #{readableDate(date.yyyymmdd())} @ #{readableTime(begintime)}&ndash;#{readableTime(endtime)} in #{loc}
    p #{desc}
body
  each val in posts
    a(id=val.id)
  include ../template/header.pug
  .header
    .textArea(style='margin-bottom: 0;')
      h1(style='margin: 0; padding: 0.8em 0 0.4em 0;') Events
  .switcheroo
    table.table
      tr.row
        td(style='width: 50%; display: table-cell; vertical-align: top;')
          div(style='width: 100%; position: relative; margin: 0; padding: 0;')
            .textArea#list(style='max-width: 65rem;')
              .eventsTermsContainer
                - var fst = '/events/' + prevTerm(reqTerm);
                - var snd = '/events/' + nextTerm(reqTerm);
                a.eventsTerm(href=fst, title='Previous Term') Previous Term
                .eventsTerm(title=reqTerm) #{prettyFmtTerm(reqTerm)}
                a.eventsTerm(href=snd, title='Next Term') Next Term
                a.eventsTerm(href='/events/calendar', title='Download Calendar') Download Calendar
              hr
              - var n = 0;
              while n < posts.length
                div(style='border-radius: 6px; overflow: hidden; margin: 1em 0; padding: 0;')
                  +event(posts[n].id, posts[n].type, posts[n].title, posts[n].descr, posts[n].date, posts[n].begin, posts[n].end, posts[n].loc,posts[n].imgpath)
                - ++n;
        td(style='width: 50%; display: table-cell; vertical-align: top;')
          .textArea(style='max-width: 65rem;')
            div(style='width: 100%; position: relative; margin: 0; padding: 0;')
              - var n = 0;
              while n < posts.length
                .subText(id='event-'+(posts[n].id))
                  h2(style='font-size: 32pt; font-weight: 600; color: #db2323; margin: 0.5rem 0;') #{posts[n].title}
                  h3(style='font-size: 20pt; font-weight: bold; color: #fff; margin: 0.5rem 0; padding: 0.5rem; background-color: #db2323;') #{readableDate(posts[n].date.yyyymmdd())}
                  h3(style='font-size: 14pt; font-weight: bold; color: #000; margin: 0.8rem 0;') #{readableTime(posts[n].begin)}&ndash;#{readableTime(posts[n].end)}
                    br
                    | #{posts[n].loc}
                  a.button#back(href='#', style='text-align: center;')
                    div(style='display: flex; align-items: center;')
                      svg(xmlns='http://www.w3.org/2000/svg', width='30', height='30')
                        g(id="g3028", stroke-width="2.23", stroke="#ffffff")
                          path(id="path4003", transform='scale(1.5)' style="font-size:11.38508987000000000px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Segoe UI Symbol;-inkscape-font-specification:Segoe UI Symbol", d="m 1.731867,9.9956035 c 2e-5,0.7560365 0.09966,1.4842425 0.298902,2.1846165 0.199287,0.700357 0.477675,1.358232 0.835165,1.973627 0.357528,0.615372 0.786831,1.175079 1.287912,1.67912 0.501116,0.504017 1.057891,0.936251 1.67033,1.296703 0.612469,0.360426 1.270344,0.640279 1.973627,0.839561 0.703309,0.199253 1.432978,0.298886 2.18901,0.298901 0.756055,-1.5e-5 1.484259,-0.09965 2.184616,-0.298901 0.700375,-0.199282 1.355319,-0.479135 1.964834,-0.839561 0.609531,-0.360452 1.167773,-0.792686 1.674726,-1.296703 0.506965,-0.504041 0.940664,-1.063748 1.301099,-1.67912 0.360444,-0.615395 0.641762,-1.27327 0.843956,-1.973627 0.202201,-0.700374 0.3033,-1.42858 0.303296,-2.1846165 4e-6,-0.756049 -0.09963,-1.484254 -0.298901,-2.184615 -0.199263,-0.70037 -0.479116,-1.356779 -0.83956,-1.969231 -0.360435,-0.612454 -0.792669,-1.169231 -1.296704,-1.67033 -0.504022,-0.501098 -1.063729,-0.931867 -1.67912,-1.292307 -0.615377,-0.360439 -1.273251,-0.640292 -1.973626,-0.839561 -0.700357,-0.199264 -1.428561,-0.298899 -2.184616,-0.2989 -0.756032,10e-7 -1.485701,0.09964 -2.18901,0.2989 -0.703283,0.199269 -1.361158,0.477658 -1.973627,0.835165 -0.612439,0.357511 -1.169214,0.786814 -1.67033,1.287912 -0.501081,0.501099 -0.930384,1.05934 -1.287912,1.674726 -0.35749,0.615382 -0.635878,1.273256 -0.835165,1.973626 -0.199247,0.700361 -0.298882,1.428566 -0.298902,2.184615 z m 2.769231,0.035172 0,-0.035172 4.026374,-4.210988 2.918682,0 -3.068132,3.138462 6.672527,0 0,2.1802195 -6.672527,0 3.068132,3.138461 -2.918682,0 z M 0,9.9868115 c 2.0999981e-5,-0.90843 0.120171,-1.784619 0.360439,-2.628572 0.240315,-0.843958 0.58024,-1.636632 1.01978,-2.378021 0.43958,-0.741393 0.964123,-1.416851 1.573627,-2.026375 C 3.563387,2.3443225 4.238845,1.8197795 4.980218,1.3802185 5.721627,0.94065953 6.515765,0.60073453 7.362637,0.36043753 8.209538,0.12014953 9.087192,2.5255985e-6 9.995604,-4.7440151e-7 10.90404,2.5255985e-6 11.781694,0.12015453 12.628571,0.36043853 c 0.846895,0.240297 1.641033,0.577292 2.382418,1.01098997 0.741398,0.433701 1.41832,0.955312 2.030769,1.564835 0.612458,0.609524 1.138465,1.284982 1.578022,2.026374 0.439563,0.74139 0.77949,1.535528 1.01978,2.382416 0.240295,0.846883 0.360442,1.727468 0.36044,2.641759 2e-6,0.9084175 -0.120145,1.7860735 -0.36044,2.6329675 -0.24029,0.846877 -0.580217,1.641015 -1.01978,2.382417 -0.439557,0.74138 -0.965564,1.418303 -1.578022,2.03077 -0.612449,0.61244 -1.289371,1.138447 -2.030769,1.578022 -0.741385,0.439545 -1.535523,0.780937 -2.382418,1.024176 C 11.781694,19.878372 10.90404,19.999984 9.995604,20 9.087192,19.999984 8.209538,19.879837 7.362637,19.63956 6.515765,19.399252 5.721627,19.06079 4.980218,18.624176 4.238845,18.187531 3.563387,17.66299 2.953846,17.050549 2.344342,16.438082 1.819799,15.761159 1.380219,15.019779 0.940679,14.278377 0.600754,13.482774 0.360439,12.632967 0.120168,11.783143 2.0999981e-5,10.901091 0,9.9868125 z")
                      h1(style='margin: 0 0 0 0.5rem; color: #fff; font-size: 16pt;') Back
                  | !{posts[n].body}
                  div(style='height: 2rem;')
                - ++n;
  include ../template/footer.pug
