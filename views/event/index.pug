
doctype html
include ../template/head.pug
-
  function readableDate(date) {
    // date given as yyyy-mm-dd
    let day = (date.charAt(6) == '0') ? date.charAt(7) : date.slice(6,8);
    let month = '';
    switch ('' + date.slice(4,6)) {
      case '01':
        month = 'January';
        break;
      case '02':
        month = 'February';
        break;
      case '03':
        month = 'March';
        break;
      case '04':
        month = 'April';
        break;
      case '05':
        month = 'May';
        break;
      case '06':
        month = 'June';
        break;
      case '07':
        month = 'July';
        break;
      case '08':
        month = 'August';
        break;
      case '09':
        month = 'September';
        break;
      case '10':
        month = 'October';
        break;
      case '11':
        month = 'November';
        break;
      case '12':
        month = 'December';
        break;
    }
    return month + ' ' + day + ', ' + date.slice(0,4);
  }
  function readableTime(time) {
    // time given as hh:mm:ss
    const parts = time.split(':');
    time = parts[0] + parts[1];
    let intTime = parseInt(time);
    let hr = Math.floor(time/100);
    let ampm = (hr >= 12 ? 'PM' : 'AM');
    if (hr == 0) hr = 12;
    else if (hr > 12) hr -= 12;
    
    return hr + ':' + time.slice(2,4) + ' ' + ampm;
  }
  function getTerm(date) {
    // date given as yyyymmdd
    let month = parseInt(date.slice(4,6));
    return (month < 5 ? 'w' : (month < 9 ? 's' : 'f')) + date.slice(2,4);
  }
  Date.prototype.yyyymmdd = function() {
    var mm = this.getMonth() + 1; // getMonth() is zero-based
    var dd = this.getDate();
    
    return [this.getFullYear(),
            (mm>9 ? '' : '0') + mm,
            (dd>9 ? '' : '0') + dd
            ].join('');
          };
  function prettyFmtTerm(term) {
    var s = '';
    if (term[0] == 'w') { s = 'Winter' }
    else if (term[0] == 's') { s = 'Spring' }
    else if (term[0] == 'f') { s = 'Fall' }
    return s + ' 20' + term[1] + term[2];
  }
  function nextTerm(term) {
    if (term[0] == 'w') { return 's' + term[1] + term[2]; }
    if (term[0] == 's') { return 'f' + term[1] + term[2]; }
    if (term[0] == 'f') { return 'w' + (parseInt(term[1]+term[2])+1); }
  }
  function prevTerm(term) {
    if (term[0] == 'w') { return 'f' + (parseInt(term[1]+term[2])-1); }
    if (term[0] == 's') { return 'w' + term[1] + term[2]; }
    if (term[0] == 'f') { return 's' + term[1] + term[2]; }
  }

mixin event(type, title, desc, date, begintime, endtime, loc)
  .longEventContainer
    .longEventItem
      a.title(href='javascript:void(0)', id=date)
        h2 #{title}
        h3 #{readableDate(date)} @ #{readableTime(begintime)}&ndash;#{readableTime(endtime)} in #{loc}
        p #{desc}
      .description
        block
body
  script.
    function getAnchor() {
      var cururl = document.URL;
      var urlcomponents = cururl.split('#');
      return (urlcomponents.length > 1) ? urlcomponents[1] : null;
    }
    var prev = null;
    document.addEventListener( 'DOMContentLoaded', function () {
      var bruh = document.getElementsByClassName('description');
      var coll = document.getElementsByClassName('title');
      for (i = 0; i < bruh.length; ++i) {
        bruh[i].style.maxHeight = 0;
      }
      var i;
      for (i = 0; i < coll.length; ++i) {
        coll[i].addEventListener('click', function() {
          this.classList.toggle('active');
          var content = this.nextElementSibling;
          if (content.style.maxHeight && content.style.maxHeight != '0px') { // Hide it
            content.style.maxHeight = '0px';
            content.style.marginBottom = '0';
            prev = null;
          } else { // Show it
            content.style.maxHeight = content.scrollHeight + 'px';
            content.style.marginBottom = '0.5em';
            if (prev) {
              prev.classList.toggle('active');
              prev.nextElementSibling.style.maxHeight = '0px';
              prev.nextElementSibling.style.marginBottom = '0';
            }
            prev = this;
          }
        });
      }
      document.getElementById(getAnchor()).click();
    });
  script(src='https://polyfill.io/v3/polyfill.min.js?features=es6')
  script#MathJax-script(async, src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML')
  include ../template/header.pug
  .header(style='filter: hue-rotate(320deg); background-position: bottom;')
    .textArea
      h1(style='margin: 0; padding: 0.8em 0 0.8em 0; font-size: 48pt;') Events
  .textArea(style='width: 50%;')
    .eventsTermsContainer
      - var fst = '/events/' + prevTerm(reqTerm);
      - var snd = '/events/' + nextTerm(reqTerm);
      a.eventsTerm(href=fst, title='Previous Term') Previous Term
      .eventsTerm(title=reqTerm) #{prettyFmtTerm(reqTerm)}
      a.eventsTerm(href=snd, title='Next Term') Next Term
      //a.eventsTerm#archive(href='/events/archive', title='Archive') Archive
    hr
    each val in posts
      +event(val.eventtype, val.title, val.descr, val.date.yyyymmdd(), val.begin, val.end, val.loc)
        | !{val.body}
  include ../template/footer.pug
